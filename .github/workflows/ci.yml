name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.9', '3.10', '3.11', '3.12' ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: |
            pyproject.toml
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install ruff pytest
      - name: Configure FFI env
        run: |
          echo "RATATUI_FFI_TAG=v0.2.0" >> $GITHUB_ENV
          echo "RATATUI_FFI_AUTO_BUILD=1" >> $GITHUB_ENV
      - name: Show bundled library info
        run: |
          echo "RATATUI_FFI_LIB=$RATATUI_FFI_LIB"
          echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH"
          ls -lah $(dirname "$RATATUI_FFI_LIB") || true
          python - << 'PY'
import os, sys, pathlib
p = os.environ.get('RATATUI_FFI_LIB')
print('Exists:', p, os.path.exists(p))
pkg = pathlib.Path('src/ratatui_py/_bundled')
print('Bundled dir exists:', pkg, pkg.exists(), 'contents:', list(pkg.iterdir()) if pkg.exists() else [])
PY
      - name: Lint (src only)
        run: ruff check src
      # Optional: enable mypy once types are finalized for bindings
      # - name: Type check
      #   run: mypy src
      - name: Tests
        env:
          PYTHONPATH: ${{ github.workspace }}/src
        run: pytest -q
