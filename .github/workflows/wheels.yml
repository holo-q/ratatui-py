name: Wheels

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch: {}

jobs:
  build_wheels:
    name: Build wheels (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install cibuildwheel
        run: |
          python -m pip install -U pip
          python -m pip install cibuildwheel==2.21.3

      - name: Build wheels with bundled libratatui_ffi
        env:
          CIBW_BUILD: cp38-* cp39-* cp310-* cp311-* cp312-*
          CIBW_SKIP: pp* *musllinux*
          # Install Rust inside the build environment/container
          CIBW_BEFORE_ALL_LINUX: curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal
          CIBW_BEFORE_ALL_MACOS: curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal
          CIBW_BEFORE_ALL_WINDOWS: powershell -Command "irm https://win.rustup.rs -UseBasicParsing | iex; rustup-init -y --profile minimal"
          # Ensure cargo is on PATH in build env
          CIBW_ENVIRONMENT_LINUX: PATH=$HOME/.cargo/bin:$PATH
          CIBW_ENVIRONMENT_MACOS: PATH=$HOME/.cargo/bin:$PATH
          CIBW_ENVIRONMENT_WINDOWS: PATH=%USERPROFILE%\/.cargo/bin;%PATH%
          # Optionally pin the bundled ffi version (setup.py default is v0.1.3)
          RATATUI_FFI_TAG: v0.1.3
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*.whl

  release:
    name: Attach wheels to GitHub Release
    needs: build_wheels
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          merge-multiple: true

      - uses: softprops/action-gh-release@v2
        with:
          files: "*.whl"
